plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 33

    namespace "me.longluo.fwk"

    defaultConfig {
        applicationId "me.longluo.fwk"
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    signingConfigs {
        rk3588_hht {
            storeFile file("../jks/rk3588_hht.jks")
            storePassword 'rk3588_hht'
            keyAlias 'rk3588_hht'
            keyPassword 'rk3588_hht'
        }

        rk3576 {
            storeFile file("../jks/rk3576_hitevision.jks")
            keyAlias "hitevision"
            keyPassword "hitevision"
            storePassword "hitevision"
        }
    }

    flavorDimensions "product"

    productFlavors {
        nx3588 {
            dimension = "product"
            signingConfig signingConfigs.rk3588_hht
        }

        ncm3 {
            dimension = "product"
            signingConfig signingConfigs.rk3576
        }
    }

    buildTypes {
        debug {
            signingConfig null
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
//    implementation fileTree(dir: "libs", include: ["*.jar"])

    // 添加 framework.jar，仅编译
    compileOnly(files("libs/framework.jar"))

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.6.0'

    implementation 'androidx.core:core-ktx:1.7.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "org.greenrobot:eventbus:3.3.1"

    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation "androidx.room:room-guava:2.1.0"

    implementation 'com.github.getActivity:Toaster:12.6'

    implementation 'com.github.getActivity:XXPermissions:20.0'
}


import groovy.namespace.QName
import groovy.xml.XmlParser
import groovy.xml.XmlUtil

// 在 preBuild 任务执行完之后处理
preBuild.doLast {
    // 定义修改 .iml 文件中 Android SDK 优先级方法
    def changeSdkOrder = { String path ->
        try {
            def imlFile = new File(path)
            def parsed = new XmlParser().parse(imlFile)

            // 从 .iml 文件中读取 NewModuleRootManager 节点
            def rootManagerComponent = parsed.getAt(QName.valueOf("component"))
                    .find { Node n -> n.attribute("name") == "NewModuleRootManager" }

            if (rootManagerComponent == null) {
                println "> 没有找到 NewModuleRootManager 节点"
                return
            }

            // 从 NewModuleRootManager 节点中获取 Android SDK 配置节点
            def jdkEntry = rootManagerComponent.getAt(QName.valueOf("orderEntry"))
                    .find { Node n -> n.attribute("type") == "jdk" }

            if (jdkEntry == null) {
                println "> 没有找到 jdk 节点"
                return
            }

            // 保存节点参数
            def jdkName = jdkEntry.attribute("jdkName")
            def jdkType = jdkEntry.attribute("jdkType")

            println "> Task :${project.name}:preBuild:doLast:changedSdkOrder jdkEntry = $jdkEntry"

            // 从 NewModuleRootManager 节点中移除 Android SDK 配置节点
            rootManagerComponent.remove(jdkEntry)

            // 重新将 Android SDK 配置节点添加到最后
            rootManagerComponent.appendNode("orderEntry", [
                    "type"   : "jdk",
                    "jdkName": jdkName,
                    "jdkType": jdkType
            ])

            // 将新生成的 .iml 写入文件
            XmlUtil.serialize(parsed, new FileOutputStream(imlFile))
        } catch (Exception e) {
            e.printStackTrace()
        }
    }

    // 修改 .iml 文件
    println "> Task :${project.name}:preBuild:doLast:changedSdkOrder"
    changeSdkOrder(rootDir.absolutePath + "/.idea/modules/app/FrameworkDemo.app.main.iml")
}




